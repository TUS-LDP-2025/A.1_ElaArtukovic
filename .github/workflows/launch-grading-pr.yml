name: Launch Grading PR
on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-and-trigger:
    runs-on: ubuntu-latest
    env:
      BLANK_BRANCH: grading-blank
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine default branch
        id: def
        run: echo "DEF=${{ github.event.repository.default_branch }}" >> "$GITHUB_OUTPUT"

      - name: Create/update blank base branch at repo root (shared history)
        run: |
          set -euo pipefail
          DEF="${{ steps.def.outputs.DEF }}"
          git fetch --all --prune
          git checkout "$DEF"
      
          # Find the root (first) commit of the default branch
          ROOT=$(git rev-list --max-parents=0 "$DEF" | tail -n1)
      
          # Create or reset grading-blank to the root commit
          git branch -f "$BLANK_BRANCH" "$ROOT"
          git push -f origin "$BLANK_BRANCH"

      - name: Create (or find) grading PR
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}    # or ${{ secrets.GH_PR_CREATOR }}  
        run: |
          set -euo pipefail
          DEF="${{ steps.def.outputs.DEF }}"
          PR_NUM=$(gh pr list --base "$BLANK_BRANCH" --head "$DEF" --json number -q '.[0].number' || true)
          if [ -z "${PR_NUM:-}" ]; then
            TITLE="Grading PR: ${DEF} â†’ ${BLANK_BRANCH}"
            BODY="Automated grading PR comparing the full repo to its root commit."
            PR_URL=$(gh pr create --base "$BLANK_BRANCH" --head "$DEF" --title "$TITLE" --body "$BODY")
            PR_NUM=$(gh pr view --json number -q .number)
          else
            PR_URL=$(gh pr view "$PR_NUM" --json url -q .url)
          fi
          echo "number=$PR_NUM" >> "$GITHUB_OUTPUT"
          echo "url=$PR_URL"    >> "$GITHUB_OUTPUT"


      - name: Trigger AI review via comment
        if: ${{ steps.pr.outputs.number != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr comment ${{ steps.pr.outputs.number }} -b "/review"

      - name: Output link
        if: ${{ steps.pr.outputs.url != '' }}
        env:
          PR_URL: ${{ steps.pr.outputs.url }}
        run: |
          echo "PR link: $PR_URL"
          echo "::notice title=Grading PR::$PR_URL"
